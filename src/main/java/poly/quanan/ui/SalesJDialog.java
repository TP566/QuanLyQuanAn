/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JDialog.java to edit this template
 */
package poly.quanan.ui;

import poly.quanan.entity.Bill;
import poly.quanan.dao.CardDAO;
import poly.quanan.dao.BillDAO;
import poly.quanan.dao.impl.CardDAOimpl;
import poly.quanan.dao.impl.BillDAOImpl;
import poly.quanan.entity.Card;
import java.awt.Color;
import java.awt.Dimension;
import java.awt.Frame;
import java.awt.event.ActionEvent;
import java.util.List;
import javax.swing.JButton;
import poly.quanan.ui.manager.BillManagerJDialog;

/**
 *
 * @author lengh
 */
public class SalesJDialog extends javax.swing.JDialog implements SalesController {

    private Bill bill;

    public void setBill(Bill bill) {
        this.bill = bill;
    }

    /**
     * Creates new form SalesJDialog
     */
    public SalesJDialog(java.awt.Frame parent, boolean modal) {
        super(parent, modal);
        initComponents();
        setTitle("Th·∫ª ƒë·ªãnh danh"); // üëâ D√≤ng n√†y ƒë·∫∑t ti√™u ƒë·ªÅ

    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        pnlCard = new javax.swing.JPanel();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        addWindowListener(new java.awt.event.WindowAdapter() {
            public void windowOpened(java.awt.event.WindowEvent evt) {
                formWindowOpened(evt);
            }
        });

        pnlCard.setBackground(new java.awt.Color(255, 255, 255));
        pnlCard.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));
        pnlCard.setLayout(new java.awt.GridLayout(0, 6, 5, 5));

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(pnlCard, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, 542, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(pnlCard, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, 326, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void formWindowOpened(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_formWindowOpened
        // TODO add your handling code here:
        open();
    }//GEN-LAST:event_formWindowOpened

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(SalesJDialog.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(SalesJDialog.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(SalesJDialog.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(SalesJDialog.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>

        /* Create and display the dialog */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                SalesJDialog dialog = new SalesJDialog(new javax.swing.JFrame(), true);
                dialog.addWindowListener(new java.awt.event.WindowAdapter() {
                    @Override
                    public void windowClosing(java.awt.event.WindowEvent e) {
                        System.exit(0);
                    }
                });
                dialog.setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JPanel pnlCard;
    // End of variables declaration//GEN-END:variables
    BillDAO dao = new BillDAOImpl(); // ‚úÖ ƒê√∫ng

    @Override
    public void open() {
        this.setLocationRelativeTo(null);
        this.loadCards(); // t·∫£i v√† hi·ªÉn th·ªã c√°c th·∫ª l√™n c·ª≠a s·ªï b√°n h√†ng    
    }

    @Override
    public void showBillManagerJDialog(int cardId) {
        BillDAO dao = new BillDAOImpl();
        Bill bill = dao.findServicingByCardId(cardId); // T·∫£i bill ƒëang ph·ª•c v·ª• c·ªßa th·∫ª
        BillManagerJDialog dialog = new BillManagerJDialog((Frame) this.getOwner(), true);
        dialog.setBill(bill); // ‚úÖ TRUY·ªÄN bill v√†o dialog tr∆∞·ªõc khi hi·ªÉn th·ªã
        dialog.setVisible(true);
    }

    private void loadCards() {// t·∫£i v√† hi·ªÉn th·ªã c√°c th·∫ª l√™n c·ª≠a s·ªï b√°n h√†ng
        CardDAO dao = new CardDAOimpl();
        List<Card> cards = dao.findAll();
        pnlCard.removeAll();
        cards.forEach(card -> pnlCard.add(this.createButton(card)));
    }

    private JButton createButton(Card card) { // <-- s·ª≠a l·∫°i cho ƒë√∫ng class t√™n Card

        JButton btnCard = new JButton();

        // S·ª≠ d·ª•ng ƒë√∫ng getter ƒë∆∞·ª£c Lombok sinh ra: getCardID()
        btnCard.setText(String.format("Card #%d", card.getId()));
        btnCard.setPreferredSize(new Dimension(0, 80));

        // Tr·∫°ng th√°i 0 l√† ƒëang ho·∫°t ƒë·ªông ‚Üí enable
        btnCard.setEnabled(card.getStatus() == 0);

        // ƒê·∫∑t m√†u n·ªÅn t√πy theo tr·∫°ng th√°i
        btnCard.setBackground(card.getId() == 0 ? Color.PINK : Color.PINK);

        // Truy·ªÅn cardID l√†m l·ªánh h√†nh ƒë·ªông
        btnCard.setActionCommand(String.valueOf(card.getId()));

        btnCard.addActionListener((ActionEvent e) -> {
            int cardId = Integer.parseInt(e.getActionCommand());
            SalesJDialog.this.showBillManagerJDialog(cardId);
        });

        return btnCard;
    }

}
