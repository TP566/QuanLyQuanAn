/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JDialog.java to edit this template
 */
package poly.quanan.ui.manager;

import java.awt.Frame;
import poly.quanan.dao.DrinkDAO;
import poly.quanan.dao.LoaiMonAnDAO;
import poly.quanan.dao.impl.DrinkDAOImpl;
import poly.quanan.dao.impl.LoaiMonAnDAOImpl;
import poly.quanan.entity.Drink;
import poly.quanan.entity.LoaiMonAn;
import poly.quanan.util.XDialog;
import poly.quanan.util.XIcon;

import java.io.File;
import java.util.ArrayList;
import java.util.List;
import javax.swing.DefaultComboBoxModel;
import javax.swing.JFileChooser;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;
import poly.quanan.entity.Bill;

/**
 *
 * @author admin
 */
<<<<<<< HEAD
public class DrinkManagerJDialog extends javax.swing.JDialog implements DrinkController{
=======
public class DrinkManagerJDialog extends javax.swing.JDialog implements DrinkController {
>>>>>>> 059eae8 (Cập nhật code)

    private Bill bill;
    private JFileChooser fileChooser = new JFileChooser();

    private List<LoaiMonAn> categories = new ArrayList<>();
    private List<Drink> drinks = new ArrayList<>();

    private final LoaiMonAnDAO categoryDao = new LoaiMonAnDAOImpl();
    private final DrinkDAO drinkDao = new DrinkDAOImpl();

    private List<Drink> items = new ArrayList<>();

    /**
     * Creates new form DrinkManagerJDialog
     */
    public DrinkManagerJDialog(java.awt.Frame parent, boolean modal) {
        super(parent, modal);
        initComponents();
        fillCategories();  // load danh mục và chọn dòng đầu tiên
        fillToTable();     // load dữ liệu đồ uống theo danh mục được chọn
        setTitle("Quản lý Đồ Uống");
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        tabs = new javax.swing.JTabbedPane();
        jPanel2 = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        tblDrinks = new javax.swing.JTable();
        jScrollPane2 = new javax.swing.JScrollPane();
        tblCategories = new javax.swing.JTable();
        btnCheckAll1 = new javax.swing.JButton();
        btnUncheckAll1 = new javax.swing.JButton();
        btnDeleteCheckedItems1 = new javax.swing.JButton();
        jPanel3 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        txtDrinkId = new javax.swing.JTextField();
        jLabel3 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        cboLoaiMonAn = new javax.swing.JComboBox<>();
        jLabel7 = new javax.swing.JLabel();
        txtDrinkName = new javax.swing.JTextField();
        jLabel8 = new javax.swing.JLabel();
        txtDiscount = new javax.swing.JTextField();
        txtPrice = new javax.swing.JTextField();
        txtUnit = new javax.swing.JTextField();
        jLabel9 = new javax.swing.JLabel();
        jLabel10 = new javax.swing.JLabel();
        txtStockQuantity = new javax.swing.JTextField();
        jPanel12 = new javax.swing.JPanel();
        btnCreate1 = new javax.swing.JButton();
        btnDelete1 = new javax.swing.JButton();
        btnUpdate1 = new javax.swing.JButton();
        btnMoveLast2 = new javax.swing.JButton();
        btnMoveNext1 = new javax.swing.JButton();
        btnMovePrevious1 = new javax.swing.JButton();
        btnMoveFirst1 = new javax.swing.JButton();
        btnClear1 = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);

        jPanel2.setBackground(new java.awt.Color(204, 255, 255));

        tblDrinks.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null}
            },
            new String [] {
                "Loại đồ uông", "Mã đồ uống", "Tên đồ uống", "Giảm giá", "Đơn giá", "Đơn vị tính ", "Số lượng tồn", "null"
            }
        ) {
            Class[] types = new Class [] {
<<<<<<< HEAD
                java.lang.Object.class, java.lang.Integer.class, java.lang.String.class, java.lang.Double.class, java.lang.Double.class, java.lang.String.class, java.lang.Integer.class, java.lang.Boolean.class
=======
                java.lang.String.class, java.lang.Integer.class, java.lang.String.class, java.lang.Double.class, java.lang.Double.class, java.lang.String.class, java.lang.Integer.class, java.lang.Boolean.class
>>>>>>> 059eae8 (Cập nhật code)
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }
        });
        tblDrinks.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tblDrinksMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(tblDrinks);

        tblCategories.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null},
                {null},
                {null},
                {null}
            },
            new String [] {
                "Loại Đồ Uống"
            }
<<<<<<< HEAD
        ));
=======
        ) {
            Class[] types = new Class [] {
                java.lang.String.class
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }
        });
>>>>>>> 059eae8 (Cập nhật code)
        tblCategories.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tblCategoriesMouseClicked(evt);
            }
        });
        jScrollPane2.setViewportView(tblCategories);

        btnCheckAll1.setBackground(new java.awt.Color(204, 204, 204));
        btnCheckAll1.setText("Chọn tất cả");
        btnCheckAll1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnCheckAll1ActionPerformed(evt);
            }
        });

        btnUncheckAll1.setBackground(new java.awt.Color(204, 204, 204));
        btnUncheckAll1.setText("Bỏ chọn tất cả");
        btnUncheckAll1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnUncheckAll1ActionPerformed(evt);
            }
        });

        btnDeleteCheckedItems1.setBackground(new java.awt.Color(204, 204, 204));
        btnDeleteCheckedItems1.setText("Xóa các mục chọn");
        btnDeleteCheckedItems1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnDeleteCheckedItems1ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
<<<<<<< HEAD
                .addComponent(jScrollPane2, javax.swing.GroupLayout.DEFAULT_SIZE, 141, Short.MAX_VALUE)
                .addGap(18, 18, 18)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 583, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
=======
                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 161, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
>>>>>>> 059eae8 (Cập nhật code)
                        .addComponent(btnCheckAll1)
                        .addGap(18, 18, 18)
                        .addComponent(btnUncheckAll1)
                        .addGap(18, 18, 18)
                        .addComponent(btnDeleteCheckedItems1)
<<<<<<< HEAD
                        .addGap(26, 26, 26))))
=======
                        .addGap(26, 26, 26))
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 663, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))
>>>>>>> 059eae8 (Cập nhật code)
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 299, Short.MAX_VALUE)
                    .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE))
                .addGap(18, 18, 18)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnCheckAll1, javax.swing.GroupLayout.PREFERRED_SIZE, 33, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnUncheckAll1, javax.swing.GroupLayout.PREFERRED_SIZE, 33, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnDeleteCheckedItems1, javax.swing.GroupLayout.PREFERRED_SIZE, 33, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(0, 0, Short.MAX_VALUE))
        );

        tabs.addTab("DANH SÁCH ", jPanel2);

        jPanel3.setBackground(new java.awt.Color(204, 255, 255));

        jLabel1.setText("Mã đồ uống");

        jLabel3.setText("Đơn giá");

        jLabel5.setText("Loại");

        cboLoaiMonAn.setName("Nước trái cây "); // NOI18N
        cboLoaiMonAn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cboLoaiMonAnActionPerformed(evt);
            }
        });

        jLabel7.setText("Tên đồ uống");

        jLabel8.setText("Giảm giá");

        jLabel9.setText("Đơn vị tính ");

        jLabel10.setText("Số lượng");

        jPanel12.setBackground(new java.awt.Color(204, 255, 255));

        btnCreate1.setBackground(new java.awt.Color(204, 204, 204));
        btnCreate1.setText("Tạo mới");
        btnCreate1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnCreate1ActionPerformed(evt);
            }
        });

        btnDelete1.setBackground(new java.awt.Color(204, 204, 204));
        btnDelete1.setText("Xóa");
        btnDelete1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnDelete1ActionPerformed(evt);
            }
        });

        btnUpdate1.setBackground(new java.awt.Color(204, 204, 204));
        btnUpdate1.setText("Cập nhật");
        btnUpdate1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnUpdate1ActionPerformed(evt);
            }
        });

        btnMoveLast2.setBackground(new java.awt.Color(255, 255, 204));
        btnMoveLast2.setText(">|");
        btnMoveLast2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnMoveLast2ActionPerformed(evt);
            }
        });

        btnMoveNext1.setBackground(new java.awt.Color(255, 255, 204));
        btnMoveNext1.setText(">>");
        btnMoveNext1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnMoveNext1ActionPerformed(evt);
            }
        });

        btnMovePrevious1.setBackground(new java.awt.Color(255, 255, 204));
        btnMovePrevious1.setText("<<");
        btnMovePrevious1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnMovePrevious1ActionPerformed(evt);
            }
        });

        btnMoveFirst1.setBackground(new java.awt.Color(255, 255, 204));
        btnMoveFirst1.setText("|<");
        btnMoveFirst1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnMoveFirst1ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel12Layout = new javax.swing.GroupLayout(jPanel12);
        jPanel12.setLayout(jPanel12Layout);
        jPanel12Layout.setHorizontalGroup(
            jPanel12Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel12Layout.createSequentialGroup()
                .addContainerGap(29, Short.MAX_VALUE)
                .addComponent(btnMoveFirst1, javax.swing.GroupLayout.PREFERRED_SIZE, 41, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(btnMovePrevious1, javax.swing.GroupLayout.PREFERRED_SIZE, 46, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(btnMoveNext1, javax.swing.GroupLayout.PREFERRED_SIZE, 47, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(btnMoveLast2, javax.swing.GroupLayout.PREFERRED_SIZE, 42, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(btnCreate1, javax.swing.GroupLayout.PREFERRED_SIZE, 102, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(btnDelete1, javax.swing.GroupLayout.PREFERRED_SIZE, 93, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(btnUpdate1, javax.swing.GroupLayout.PREFERRED_SIZE, 93, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );
        jPanel12Layout.setVerticalGroup(
            jPanel12Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel12Layout.createSequentialGroup()
                .addGroup(jPanel12Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnDelete1, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnUpdate1, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnCreate1, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnMoveLast2)
                    .addComponent(btnMoveNext1)
                    .addComponent(btnMovePrevious1)
                    .addComponent(btnMoveFirst1))
                .addGap(12, 12, 12))
        );

        btnClear1.setBackground(new java.awt.Color(204, 204, 204));
        btnClear1.setText("Làm mới");
        btnClear1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnClear1ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addGap(41, 41, 41)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel5)
                            .addComponent(cboLoaiMonAn, javax.swing.GroupLayout.PREFERRED_SIZE, 176, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel3Layout.createSequentialGroup()
                        .addComponent(jPanel12, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(btnClear1, javax.swing.GroupLayout.PREFERRED_SIZE, 92, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(20, 20, 20))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel3Layout.createSequentialGroup()
                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel3Layout.createSequentialGroup()
                                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel1)
                                    .addComponent(txtDrinkId, javax.swing.GroupLayout.PREFERRED_SIZE, 176, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGap(60, 60, 60)
                                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel7)
                                    .addComponent(txtDrinkName, javax.swing.GroupLayout.PREFERRED_SIZE, 176, javax.swing.GroupLayout.PREFERRED_SIZE)))
                            .addGroup(jPanel3Layout.createSequentialGroup()
                                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel3)
                                    .addComponent(txtPrice, javax.swing.GroupLayout.PREFERRED_SIZE, 176, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGap(60, 60, 60)
                                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel9)
                                    .addComponent(txtUnit, javax.swing.GroupLayout.PREFERRED_SIZE, 176, javax.swing.GroupLayout.PREFERRED_SIZE))))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel10)
                            .addComponent(txtStockQuantity, javax.swing.GroupLayout.PREFERRED_SIZE, 176, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel8)
                            .addComponent(txtDiscount, javax.swing.GroupLayout.PREFERRED_SIZE, 176, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(83, 83, 83))))
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addGap(22, 22, 22)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addComponent(jLabel1)
                        .addGap(18, 18, 18)
                        .addComponent(txtDrinkId, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addComponent(jLabel7)
                        .addGap(18, 18, 18)
                        .addComponent(txtDrinkName, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addComponent(jLabel8)
                        .addGap(18, 18, 18)
                        .addComponent(txtDiscount, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(33, 33, 33)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel3)
                            .addComponent(jLabel9))
                        .addGap(18, 18, 18)
                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(txtPrice, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(txtUnit, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addComponent(jLabel10)
                        .addGap(18, 18, 18)
                        .addComponent(txtStockQuantity, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(18, 18, 18)
                .addComponent(jLabel5)
                .addGap(18, 18, 18)
                .addComponent(cboLoaiMonAn, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(83, 83, 83)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jPanel12, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnClear1, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        tabs.addTab("BIỂU MẪU ", jPanel3);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
<<<<<<< HEAD
            .addComponent(tabs)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(tabs)
=======
            .addComponent(tabs, javax.swing.GroupLayout.PREFERRED_SIZE, 838, javax.swing.GroupLayout.PREFERRED_SIZE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(tabs, javax.swing.GroupLayout.DEFAULT_SIZE, 446, Short.MAX_VALUE)
>>>>>>> 059eae8 (Cập nhật code)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void tblDrinksMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tblDrinksMouseClicked
        // TODO add your handling code here:
        if (evt.getClickCount() == 1) {
            this.edit();
        }
    }//GEN-LAST:event_tblDrinksMouseClicked

    private void tblCategoriesMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tblCategoriesMouseClicked
        //         if (evt.getClickCount() == 1) {
        //            this.edit();
        //        }
        fillToTable();
    }//GEN-LAST:event_tblCategoriesMouseClicked

    private void btnCheckAll1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnCheckAll1ActionPerformed
        // TODO add your handling code here:
        checkAll();
    }//GEN-LAST:event_btnCheckAll1ActionPerformed

    private void btnUncheckAll1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnUncheckAll1ActionPerformed
        // TODO add your handling code here:
        uncheckAll();
    }//GEN-LAST:event_btnUncheckAll1ActionPerformed

    private void btnDeleteCheckedItems1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnDeleteCheckedItems1ActionPerformed
        // TODO add your handling code here:
        delete();
    }//GEN-LAST:event_btnDeleteCheckedItems1ActionPerformed

    private void cboLoaiMonAnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cboLoaiMonAnActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_cboLoaiMonAnActionPerformed

    private void btnCreate1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnCreate1ActionPerformed
        // TODO add your handling code here:
        this.create();
    }//GEN-LAST:event_btnCreate1ActionPerformed

    private void btnDelete1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnDelete1ActionPerformed
        // TODO add your handling code here:
        this.delete();
    }//GEN-LAST:event_btnDelete1ActionPerformed

    private void btnUpdate1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnUpdate1ActionPerformed
        // TODO add your handling code here:
        this.update();
    }//GEN-LAST:event_btnUpdate1ActionPerformed

    private void btnMoveLast2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnMoveLast2ActionPerformed
        // TODO add your handling code here:
        this.moveLast();
    }//GEN-LAST:event_btnMoveLast2ActionPerformed

    private void btnMoveNext1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnMoveNext1ActionPerformed
        // TODO add your handling code here:
        this.moveNext();
    }//GEN-LAST:event_btnMoveNext1ActionPerformed

    private void btnMovePrevious1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnMovePrevious1ActionPerformed
        // TODO add your handling code here:
        this.movePrevious();
    }//GEN-LAST:event_btnMovePrevious1ActionPerformed

    private void btnMoveFirst1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnMoveFirst1ActionPerformed
        // TODO add your handling code here:
        this.moveFirst();
    }//GEN-LAST:event_btnMoveFirst1ActionPerformed

    private void btnClear1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnClear1ActionPerformed
        // TODO add your handling code here:
        this.clear();
    }//GEN-LAST:event_btnClear1ActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(DrinkManagerJDialog.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(DrinkManagerJDialog.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(DrinkManagerJDialog.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(DrinkManagerJDialog.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the dialog */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                DrinkManagerJDialog dialog = new DrinkManagerJDialog(new javax.swing.JFrame(), true);
                dialog.addWindowListener(new java.awt.event.WindowAdapter() {
                    @Override
                    public void windowClosing(java.awt.event.WindowEvent e) {
                        System.exit(0);
                    }
                });
                dialog.setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnCheckAll1;
    private javax.swing.JButton btnClear1;
    private javax.swing.JButton btnCreate1;
    private javax.swing.JButton btnDelete1;
    private javax.swing.JButton btnDeleteCheckedItems1;
    private javax.swing.JButton btnMoveFirst1;
    private javax.swing.JButton btnMoveLast2;
    private javax.swing.JButton btnMoveNext1;
    private javax.swing.JButton btnMovePrevious1;
    private javax.swing.JButton btnUncheckAll1;
    private javax.swing.JButton btnUpdate1;
    private javax.swing.JComboBox<String> cboLoaiMonAn;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JPanel jPanel12;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JTabbedPane tabs;
    private javax.swing.JTable tblCategories;
    private javax.swing.JTable tblDrinks;
    private javax.swing.JTextField txtDiscount;
    private javax.swing.JTextField txtDrinkId;
    private javax.swing.JTextField txtDrinkName;
    private javax.swing.JTextField txtPrice;
    private javax.swing.JTextField txtStockQuantity;
    private javax.swing.JTextField txtUnit;
    // End of variables declaration//GEN-END:variables
<<<<<<< HEAD
            @Override
=======

    @Override
>>>>>>> 059eae8 (Cập nhật code)
    public void setBill(Bill bill) {
        this.bill = bill;
    }

    @Override
    public void fillCategories() {
        DefaultComboBoxModel cboModel = (DefaultComboBoxModel) cboLoaiMonAn.getModel();
        cboModel.removeAllElements();
        DefaultTableModel tblModel = (DefaultTableModel) tblCategories.getModel();
        tblModel.setRowCount(0);

        categories = categoryDao.findAll();
        categories.forEach(cat -> {
            cboModel.addElement(cat);
            tblModel.addRow(new Object[]{cat.getTenDanhMuc()});
        });
        if (!categories.isEmpty()) {
            tblCategories.setRowSelectionInterval(0, 0);
        }
    }

    @Override
    public void chooseFile() {
        if (fileChooser.showOpenDialog(this) == JFileChooser.APPROVE_OPTION) {
            File selectedFile = fileChooser.getSelectedFile();
            File file = XIcon.copyTo(selectedFile, "images");
//            lblImage.setToolTipText(file.getName());
//            XIcon.setIcon(lblImage, file);
        }
    }

    public void fillToTable() {
        DefaultTableModel model = (DefaultTableModel) tblDrinks.getModel();
        model.setRowCount(0);
<<<<<<< HEAD
        LoaiMonAn cat = categories.get(tblCategories.getSelectedRow());
        items = drinkDao.findByCategoryId(cat.getMaDanhMuc());
        items.forEach(d -> model.addRow(new Object[]{
            d.getDrinkId(),
            d.getDrinkName(),
            d.getOrigin(),
            d.getPrice(),
            d.getUnit(),
            d.getStockQuantity(),
            d.getCategoryId(),
            d.getDiscount(),
            null // icon placeholder
        }));
    }
=======

        int sel = tblCategories.getSelectedRow();
        if (categories == null || categories.isEmpty()) {
            return;
        }
        LoaiMonAn cat = sel >= 0 ? categories.get(sel) : categories.get(0);

        items = drinkDao.findByCategoryId(cat.getMaDanhMuc());
        for (Drink d : items) {
            // CHỈ đưa số thô vào cột số
            model.addRow(new Object[]{
                d.getDrinkId(),
                d.getDrinkName(),
                d.getOrigin(),
                d.getPrice(), // Double
                d.getUnit(),
                d.getStockQuantity(), // Integer
                d.getCategoryId(),
                d.getDiscount(), // Double
                null // icon placeholder
            });
        }
    }
    
>>>>>>> 059eae8 (Cập nhật code)

    @Override
    public void open() {
        this.setLocationRelativeTo(null);
<<<<<<< HEAD
=======
        this.fillCategories();
>>>>>>> 059eae8 (Cập nhật code)
        this.fillToTable();
        this.clear();
        setTitle("Quản lý quán ăn");
    }

    public void setForm(Drink entity) {
        // Gán giá trị vào các trường text
        txtDrinkId.setText(entity.getDrinkId());
        txtDrinkName.setText(entity.getDrinkName());
        txtDiscount.setText(entity.getOrigin());
        txtPrice.setText(String.valueOf(entity.getPrice()));
        txtUnit.setText(entity.getUnit());
        txtStockQuantity.setText(String.valueOf(entity.getStockQuantity()));

        for (int i = 0; i < cboLoaiMonAn.getItemCount(); i++) {
            String maLoaiTrongCombo = (String) cboLoaiMonAn.getItemAt(i);
            if (maLoaiTrongCombo.equals(entity.getCategoryId() + "")) {
                cboLoaiMonAn.setSelectedIndex(i);
                break;
            }
        }

    }

    public Drink getForm() {
        Drink d = new Drink();
<<<<<<< HEAD
        d.setDrinkId(txtDrinkId.getText());
        d.setDrinkName(txtDrinkName.getText());
        d.setPrice(Double.parseDouble(txtPrice.getText()));
        d.setUnit(txtUnit.getText());
        d.setStockQuantity(Integer.parseInt(txtStockQuantity.getText()));
        LoaiMonAn cat = (LoaiMonAn) cboLoaiMonAn.getSelectedItem();
        d.setCategoryId(cat.getMaDanhMuc());
        d.setDiscount(Double.parseDouble(txtDiscount.getText()));
=======
        d.setDrinkId(txtDrinkId.getText().trim());
        d.setDrinkName(txtDrinkName.getText().trim());
        d.setPrice(txtPrice.getText().isBlank() ? 0d : Double.parseDouble(txtPrice.getText().trim()));
        d.setUnit(txtUnit.getText().trim());
        d.setStockQuantity(txtStockQuantity.getText().isBlank() ? 0 : Integer.parseInt(txtStockQuantity.getText().trim()));
        LoaiMonAn cat = (LoaiMonAn) cboLoaiMonAn.getSelectedItem();
        d.setCategoryId(cat != null ? cat.getMaDanhMuc() : null);
        d.setDiscount(txtDiscount.getText().isBlank() ? 0d : Double.parseDouble(txtDiscount.getText().trim()));
>>>>>>> 059eae8 (Cập nhật code)
        return d;
    }

    public void edit() {
        try {
            // Lấy dữ liệu từ form và cập nhật
            Drink entity = getForm();
            drinkDao.update(entity);
            fillToTable();    // Làm mới bảng
            clear();      // Xóa form
            JOptionPane.showMessageDialog(this, "Cập nhật thành công!");
        } catch (Exception e) {
            JOptionPane.showMessageDialog(this, "Lỗi khi cập nhật: " + e.getMessage());
            e.printStackTrace();
        }
    }

    public void create() {
        try {
            // Lấy dữ liệu từ form và thêm mới
            Drink entity = getForm();
            drinkDao.create(entity);
            fillToTable();    // Làm mới bảng
            clear();      // Xóa form
            JOptionPane.showMessageDialog(this, "Đã thêm đồ uống mới!");
        } catch (Exception e) {
            JOptionPane.showMessageDialog(this, "Lỗi khi thêm: " + e.getMessage());
            e.printStackTrace();
        }
    }

    public void update() {
        try {
            // Lấy dữ liệu từ form và cập nhật
            Drink entity = getForm();
            drinkDao.update(entity);
            fillToTable();    // Làm mới bảng
            clear();      // Xóa form
            JOptionPane.showMessageDialog(this, "Cập nhật đồ uống thành công!");
        } catch (Exception e) {
            JOptionPane.showMessageDialog(this, "Lỗi khi cập nhật đồ uống: " + e.getMessage());
            e.printStackTrace();
        }
    }

    public void delete() {
        try {
            String id = txtDrinkId.getText();
            int confirm = JOptionPane.showConfirmDialog(
                    this,
                    "Bạn có chắc muốn xóa?",
                    "Xác nhận",
                    JOptionPane.YES_NO_OPTION
            );
            if (confirm == JOptionPane.YES_OPTION) {
                drinkDao.deleteById(id);
                fillToTable();    // Làm mới bảng
                clear();      // Xóa form
                JOptionPane.showMessageDialog(this, "Xóa thành công!");
            }
        } catch (Exception e) {
            JOptionPane.showMessageDialog(this, "Lỗi khi xóa đồ uống: " + e.getMessage());
            e.printStackTrace();
        }
    }

    public void clear() {
        txtDrinkId.setText("");
        txtDrinkName.setText("");
        txtDiscount.setText("");
        txtPrice.setText("");
        txtUnit.setText("");
        txtStockQuantity.setText("");
        cboLoaiMonAn.setSelectedIndex(0);
        tblDrinks.clearSelection();
    }

    public void setEditable(boolean editable) {
        txtDrinkId.setEditable(editable); // Nếu đang sửa thì thường khóa mã gạo
    }

    private void setCheckedAll(boolean checked) {
        for (int i = 0; i < tblDrinks.getRowCount(); i++) {
            tblDrinks.setValueAt(checked, i, 7);
        }
    }

    public void checkAll() {
        this.setCheckedAll(true);
    }

    public void uncheckAll() {
        this.setCheckedAll(false);
    }

    public void deleteCheckedItems() {
        if (XDialog.confirm("Bạn thực sự muốn xóa các mục chọn?")) {
            for (int i = 0; i < tblDrinks.getRowCount(); i++) {
                if ((Boolean) tblDrinks.getValueAt(i, 7)) {
//                    dao.deleteById(items.get(i).getMaGao().toString());
                }
            }
            this.fillToTable();
        }
    }

    public void moveFirst() {
        this.moveTo(0);
    }

    public void movePrevious() {
        this.moveTo(tblDrinks.getSelectedRow() - 1);
    }

    public void moveNext() {
        this.moveTo(tblDrinks.getSelectedRow() + 1);
    }

    public void moveLast() {
        this.moveTo(tblDrinks.getRowCount() - 1);
    }

    public void moveTo(int index) {
        if (index < 0) {
            this.moveLast();
        } else if (index >= tblDrinks.getRowCount()) {
            this.moveFirst();
        } else {
            tblDrinks.clearSelection();
            tblDrinks.setRowSelectionInterval(index, index);
            this.edit();
        }
    }

    @Override
    public void fillDrink() {
        // chính là fillToTable() của bạn
        fillToTable();
    }

    public void fillDrinkCategory() {
        // chính là fillCategories() của bạn
        fillCategories();
    }

    @Override
    public void addDrinkToBill() {
        DrinkManagerJDialog dlg = new DrinkManagerJDialog((Frame) getOwner(), true);
        dlg.setBill(bill);
        dlg.setVisible(true);
        // sau khi đóng dialog, load lại bảng
        fillDrink();
    }

}
